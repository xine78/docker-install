#--------------------------------------------------------------------------------------------------------------------------------------------------
#docker-compose EXEMPLES
#--------------------------------------------------------------------------------------------------------------------------------------------------
#https://codefresh.io/docs/docs/yaml-examples/examples/spring-boot-kafka-zookeeper/
  kafka:
    build:
      context: kafka
      dockerfile: Dockerfile
    links:
      - zookeeper:zk
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: $CF_HOST_IP
      KAFKA_ZOOKEEPER_CONNECT: zk:2181
      KAFKA_MESSAGE_MAX_BYTES: 2000000
      KAFKA_CREATE_TOPICS: "Topic1:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
--------------------------------------------------------------------------------------------------------------------------------------------------
#https://habr.com/ru/post/505720/
#Autorisation du client:
#Pour activer l'autorisation, vous devez transférer le fichier kafka_server_jaas.conf vers kafka. Dans le dossier contenant le fichier compose yaml, créez #kafka_server_jaas.conf et ajoutez un utilisateur admin avec le mot de passe admin-secret: 

#KafkaServer {
#  org.apache.kafka.common.security.plain.PlainLoginModule required
#  username="admin"
#  password="admin-secret"
#  user_admin="admin-secret";
#};
#Client {};

example:
  kafka:
    consumer-enabled: ${consumer-enabled:true}
spring:
  kafka:
    bootstrap-servers: ${kafka_bootstrap_servers:localhost:9092}
    properties:
      sasl:
        jaas:
          config: org.apache.kafka.common.security.plain.PlainLoginModule required username=${kafka_username:'admin'} password=${kafka_password:'admin-secret'};
        mechanism: PLAIN
      security:
        protocol: SASL_PLAINTEXT
    consumer:
      auto-offset-reset: earliest
      group-id: example
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      max-poll-records: 1
      fetch-max-wait: 36000
      enable-auto-commit: false
      client-id: example
    producer:
      client-id: example
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 2
    jaas:
      enabled: true
    listener:
      poll-timeout: 1800000
      concurrency: 1
      ack-mode: manual_immediate
--------------------------------------------------------------------------------------------------------------------------------------------------
#

--------------------------------------------------------------------------------------------------------------------------------------------------
#

--------------------------------------------------------------------------------------------------------------------------------------------------
#

--------------------------------------------------------------------------------------------------------------------------------------------------
#

--------------------------------------------------------------------------------------------------------------------------------------------------
#

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
#

------------------------------------------------------------------------------------------------------------------------------
#

--------------------------------------------------------------------------------------------------------------------------------------------------
#

--------------------------------------------------------------------------------------------------------------------------------------------------
#

--------------------------------------------------------------------------------------------------------------------------------------------------
#

--------------------------------------------------------------------------------------------------------------------------------------------------